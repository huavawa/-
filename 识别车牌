#include<iostream>
#include<opencv2/opencv.hpp>

using namespace std;
using namespace cv;

int main() {
	Mat img = imread("3.jpeg");
	Mat gray;
	cvtColor(img, gray, COLOR_BGR2GRAY);//转化为灰度图
	vector<Mat> channels;
	split(img, channels);//分离通道
	Mat blue = channels.at(0);
	Mat binary;
	threshold(blue, binary, 150, 255, THRESH_BINARY);//二值化
	vector<vector<Point>> contours;//创建一个点集
	findContours(binary, contours, RETR_EXTERNAL, CHAIN_APPROX_SIMPLE);//找出轮廓
		for (int j = 0; j < contours.size(); j++) {
			double area = contourArea(contours[j]);
			if (area > 6000 || area < 2500) {
				continue;
			}
			Rect rect = boundingRect(contours[j]);//返回最小外接矩形
			float ratio = float(rect.width) / float(rect.height);//计算横纵比
			if (ratio < 2.0 || ratio > 5.0) {
				continue;
			}
			rectangle(img, rect, Scalar(0, 0, 255), 5);//画矩形
		}

	namedWindow("blue", 0); //创建一个窗口可以随意放大放小,0是windowautosize
	resizeWindow("blue", img.size() / 6);//调整图片的宽度和高度，计算
	imshow("blue", img);//展示窗口
	waitKey(0); 
	//图片预处理，变成灰度图，变成二值图，找轮廓
	return 0;
